!  PROGRAM RELASER
!
!  ***** ORIGINAL VERSION 1.0
!  THE ORIGINAL VERSION OF THIS PROGRAM WAS WRITTEN BY CLAYTON H. BAIR.
!  THIS PROGRAM WAS BEGUN ON JUNE 5, 1989.  AT THAT TIME ABSOFT'S 
!  MacFortran V2.4 WAS INSTALLED ON CLAY'S MAC II.  TURN AROUND
!  ON THE VAX WAS SO... SLOW... THAT IT SEEMED PRACTICAL TO
!  CONSIDER THIS ALTERNATIVE.
! 
!  ***** VERSION 2.0
!  THIS PROGRAM HAS BEEN RESTRUCTURED BY BRIAN M. WALSH - JUNE,2002
!  CONVERTED FROM MacFortran2.4 to MPW FORTRAN ON A MAC
!  THIS VERSION CONTAINS MOSTLY REPLACEMENT OF OUTDATED FORTRAN COMMANDS.
!  MENU INPUT ROUTINES WERE ALSO REWRITTEN BECAUSE OF OUTDATED FORTRAN CODE.
!
!  ***** VERSION 2.1

!  CHANGES IMPLEMENTED IN THE CODE JUNE, 2002 - AUGUST 2002
!  THE ORIGINAL 'DOLOOPS.IN' FILE HAS BECOME LASPAR.DAT WITH ADDITIONS
!  TO INCLUDE THE PARAMETERS THAT WERE PREVIOUSLY ONLY AVAILABLE IN THE
!  PROGRAM INPUT MENUS. THE ORIGINAL RELASER.DAT HAS BECOME 'SPECPAR.DAT'
!  AND REMAINS UNCHANGED IN CONTENT.
!  SPECPAR.DAT CONTAINS SPECTROSCOPIC INPUT, LASPAR.DAT CONTAINS LASER INPUT
!
!  ***** VERSION 2.2-2.4
!  CHANGES WERE IMPLEMENTED IN THE CODE: AUGUST 2002 - MARCH 2003
!  (1-R) HAS BEEN CHANGED TO LN(R), SINCE (1-R)~Ln(R) ONLY TRUE AT LARGE R 
!  RESONATOR TYPE (LINEAR OR RING) OPTION HAS BEEN ADDED TO PROGRAM.
!  C/2L TERMS HAVE BECOME C/(RESTYPE*L) FOR LINEAR OR RING OPTION
!  WHERE RESTYPE=1 FOR RING CAVITY AND =2 FOR A LINEAR CAVITY.
!  SUBROUTINE RATEEQ IS NEW - PREVIOUSLY THIS CODE WAS PART OF CRUNCH
!     (CRUNCH WAS JUST TOO BIG, SO I SEPARATED OUT THE RATE EQUATIONS...
!      CRUNCH IS STILL A MESS, BUT BEST I CAN DO FOR NOW.)
!
!  ***** VERSION 2.4 CONVERSION TO PC 
!  PROGRAM CONVERTED FROM MPW FORTRAN ON A MAC TO ABSOFT PRO FORTRAN 7.5
!  PC BY PATRICIA CROSS IN APRIL, 2003
!  ROUTINES REMOVED ARE:
!     CLR()
!     THEDATE(DAT)
!     THETIME(TIM)
!     ...CAN DATE AND TIME ROUTINES BE CODED GENERIC FOR PC AND MAC?
!  ROUTINES ADDED APPEAR AT END OF PROGRAM:
!     Subroutine my_FillString(string1, string2)
!     OFName(lshort,lout,icase)
!  OTHER PATRICIA CROSS ADDITIONS APPEAR IN lower case IN THE CODE
!
!  ***** VERSION 2.5
!  MAJOR CLEANUP COMPLEATED BY BRIAN M. WALSH IN APRIL, 2003
!  REMOVED ALL REMNANTS OF OLD COMMENTED OUT CODE...HAD TO BE DONE!
!     (ANY REMAINING COMMENTED OUT LINES ARE MY CURRENT REMNANTS) 
!  REMOVED SOME INACTIVE SUBROUTINES AND THEIR CALLS:
!     CALL TMTMXFR (TOTLCON(2),BILINRT(3),BILINRT(4),BILINRT(5), BILINRT(6))
!     CALL TMHOXFR (TOTLCON(1),TEMPER,BILINRT(1),BILINRT(2))
!     CALL TM3F4DK (TOTLCON(2),TEMPER,DKRATE(2))
!     CALL HO5I7DK (TOTLCON(1),TEMPER,DKRATE(1))
!  TRIED TO CLEAN UP LINE NUMBERING
!  ADDED EXTENSIVE COMMENTING TO ENTIRE PROGRAM, A MAJOR EFFORT!
!
!  ***** VERSION 2.6
!  CHANGES IMPLEMENTED IN JUNE, 2003
!  NEEDED TO CLARIFY DIFFERENCE BETWEEN END PUMP AND SIDE PUMP. ALSO,
!  THERE IS SOME CONFUSION REGARDING MODE RADIUS AND ROD RADIUS, HENCE...
!  CHANGED CAVDIA TO CMRAD, CAVAREA TO CMAREA WITH CMAREA=PI*CMRAD*CMRAD
!  CHANGED RODDIA TO RODRAD AND CREATED PABSL IN PLACE OF RODDIA.
!  (PREVIOUSLY, PROGRAM USED RODDIA FOR PUMP ABSORPTION LENGTH. I SEPARATED
!  PUMP ABSORPTION LENGTH, PABSL, FROM ROD RADIUS, RODRAD)
!  ...AND ADDED:
!      IF RESONATOR IS SIDE PUMPED THEN PABSL=2*RODRAD
!      IF RESONATOR IS END PUMPED THEN PABSL=RODL
!  ...AND CHANGED
!      W1=PUMPETA*PUMPE*(PUMPLAM/HC)/(CAVAREA*RODL)
!  TO  W1=PUMPETA*PUMPE*(PUMPLAM/HC)/(RODAREA*RODL)  
!      RODVOL = CAVDIA * RODL * PMPALGN
!  TO  RODVOL = RODAREA * RODL * PMPALGN
!      OPTVOL = CAVAREA * OPTLNG(I) * PMPALGN
!  TO  OPTVOL = CMAREA * OPTLNG(I) * PMPALGN
!
!  ***** VERSION 2.7.1 May 17, 2009
!  HAVE MOVED TO ABSOFT PRO FORTRAN ON THE MAC -
!  CHANGED .OUT EXTENSION TO .REL EXTENSION FOR REASONS TO NOT CONFLICT
!  WITH GNOM.OUT UNIX FILE TYPES
!  June 2-3, 2009
!  ...ADDED AN EXTRA MENU ITEM (6) FOR A Q-SWITCH OPEN INTERVAL TIME - IQT
!  ...AND CHANGED (IN Q-SWITCH ROUTINE):
!       IF (TQ-T .GT. 0.0D0) R8PRIME = 1.0D8
!  TO
!       IF ((TQ .GT. 0.00D0) .AND. (T .LT. TQ)) R8PRIME = 1.0D8
!       IF ((TQI .GT. 0.0D0) .AND. (T .GT. TQ+TQI)) R8PRIME = 1.0D8          
!  THIS CAN BE ADAPTED LATER FOR MULTIPLE PULSING OR REPETITVE QS
!
!  ADDED LOOP AT END OF PROGRAM TO RUN ADDITIONAL SIMULATIONS
!
!  CHANGED FORMAT(1PE10.4,11(A2,E10.4)) TO FORMAT(1PE11.5,11(A2,E11.5))
!  TO EXTEND DIGITS FROM 5 TO 6 - CORRECTS PROBLEM FORMATTING TIME
!
!  ***** VERSION 3.0 FUTURE PLANS
!  GIVE TO PATRICIA CROSS FOR A NEW PAIR OF SHOES  
!  
!     PROGRAM RELASER
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
!
      CHARACTER*60 NAMETYP,LABEL(100)
      CHARACTER*2 ION(3)
      CHARACTER*7 MAN(20)
      CHARACTER TITLE*80
      CHARACTER*5 IDUM
      CHARACTER*1 RUNAGAIN
!
      DIMENSION P(20),PP(20),YDOT(25)
      DIMENSION BACKRF(10),FRNTRF(10),PENRGY(20)    
!  DIMENSION OF ARRAYS...         
!  MAXIMUM NUMBER OF IONS                                IS CURRENTLY 3
!  MAXIMUM NUMBER OF MANIFOLDS                           IS CURRENTLY 20
!  MAXIMUM NUMBER OF SINGLE ION DECAY TIMES              IS CURRENTLY 50
!  MAXIMUM NUMBER OF BI-LINEAR ENERGY TRANSFER PROCESSES IS CURRENTLY 20
!  MAXIMUM NUMBER OF LASER WAVELENGTHS                   IS CURRENTLY 5
!  MAXIMUM NUMBER OF MANIFOLDS CAPABLE OF ABSORBING PUMP IS CURRENTLY 4
!
!    SEVERAL PARAMETER STAMEMENTS WOULD MAKE SENSE TO DEFINE
!    THE ABOVE VARIABLES.   NOTE ...
!
!  NUMBER OF RATE EQUATIONS IS # MANIFOLDS + # WAVELENGTHS
!
      COMMON /CAVK/ CAVL,CMAREA,RODAREA,RODL,CMRAD,RODRAD,PABSL,
     -              TQ,TQI,RESTYPE,PUMPTYPE,IQSWITCH
      COMMON /PUMPK/ PUMPSIG(4),PUMPE,PUMPLAM,W1,PUMPETA,PMPALGN,
     -               FWHM,NPMPLV,IPUMP,MANPMP(4,2)
      COMMON /CONCK/ NIONS,NMAN(3),Y(25),TOTLCON(3)
      COMMON /DECAY1/ DKRATE(50), NDKTIME, MANUP(50), MANLO(50)
      COMMON /DECAY2/  BILINRT(20), NBILIN, MANLOS1(20),
     -                MANLOS2(20), MANGAN1(20), MANGAN2(20), NACEPTR(20)
      COMMON /WAVLNG/ EMISLAM(5),SPO(5),ROUNDTT(5),TEMPER,OPTLNG(5),
     -                FRACUP(5),FRACLO(5),STIM(5),SPON(5),CAVALFA(5),
     -                REFLOUT(5), REFLBCK(5), SURFACET(5), RODDEX(5),
     -                NLASLAM, MANUPLZ(5), MANLOLZ(5)
      COMMON /TIMEK/ DELTAT, TOUT, T, NPOINTS
      COMMON /LSODAK/ RTOL, ATOL(4), RWORK(84),
     -                ITOL, ITASK, ISTATE, IOPT, LRW, LIW,
     -                JT, MF, H0, HMAX, HMIN, MXSTEP, IWORK(24)
      COMMON /PHYSK/ CC,HC,PI
      COMMON /WRTBLK/ NCOL,JCOL(20),ISUM(20,20)
!
!        1         2         3         4         5         6         7
!234567890123456789012345678901234567890123456789012345678901234567890123
!
!  THIS PROGRAM WILL CALCULATE THE PERFORMANCE OF A RARE EARTH LASER
!  FROM A SERIES OF RATE EQUATIONS.  APPROXIMATELY 50 INPUT PARAMETERS
!  ARE REQUIRED FOR EXECUTION.  THESE PARAMETERS ARE GIVEN DEFAULT 
!  VALUES IN SEVERAL SUBROUTINES AND AN INPUT FILE.   
!  THESE VALUES MAY BE CHANGED FOR DIFFERENT CASES.  
!  THE RESULTS ARE WRITTEN TO TWO FILES: (.REL extension for Rare Earth Laser)
!       POPNUM.REL CONTAINING MANIFOLD POPULATIONS VERSUS TIME
!       PERFNUM.REL CONTAINING LASER ENERGY VERSUS PUMP ENERGY
!
!  OPEN PERFNUM.REL AS OUTPUT FILE
!
 1100 OPEN (UNIT=11,FILE='PERFNUM.REL',STATUS='replace')
      WRITE(11,1101) 
 1101 FORMAT ('TEMP   PUMPE    EABS      TOUT   LOSS   DELAY    WIDTH ',
     -        ' EOUTLAM1    EOUTLAM2    EOUTLAM3')
!
      ICASE=0
!
!  DEFINITION OF SOME PHYSICAL/MATHEMATICAL CONSTANTS 
!       CC = SPEED OF LIGHT IN CM PER MICRO SEC
!       HC = PLANCK'S CONSTANT * SPEED OF LIGHT (JOULE-MICRON)
!       PI = THE VALUE OF PI, 3.141592654
      CC=2.99792D+04
      HC=1.98648D-19
      PI=4.0D0*DATAN(1.0D0)
!
!  PROGRAM NAME
	  WRITE(6,*) ' PROGRAM: RELASER'
	  
!  GET THE TITLE OF THIS RUN
      WRITE(6,*) ' ENTER THE TITLE FOR THIS RUN:'    
      READ(*,*) TITLE
!
!  READ LASPAR AND WRITE THE INPUT FILE
!  LASPAR CONTAINS LASER RELATED AND INTEGRATION PARAMETERS
!  CAVITY MODE RADIUS, ROD LENGTH, ABS LENGTH, CAVITY LENGTH, CAVITY TYPE
!  PUMP TYPE, NO. OF POINTS, DATA INTERVAL BETWEEN POINTS, STEP SIZE
!
	  OPEN (UNIT=10,FILE='LASPAR.DAT',STATUS='OLD')
      READ(10,100) IDUM
      READ(10,100) IDUM
      DO 1 I=1,11
         READ(10,101) PP(I)
    1 CONTINUE  
      READ (10,*) J1MAX
      DO 2 J1=1,J1MAX
         READ(10,*) BACKRF(J1)
    2 CONTINUE
      READ (10,*) JMAX
      DO 3 J=1,JMAX
         READ(10,*) FRNTRF(J)
    3 CONTINUE
      READ (10,*) IMAX
      DO 4 I=1,IMAX
         READ(10,*) PENRGY(I)
    4 CONTINUE
      CLOSE(10)
!
!  MENU ROUTINES TO CHANGE ANY DEFAULT VALUES READ IN FROM LASPAR
!
          CALL CAVPRAM (NAMETYP,LABEL,NUMVALU,P,PP)
          CALL CHANGE  (NAMETYP,LABEL,NUMVALU,P)
          CALL CAVHUMN (P)
C
          CALL LSODAPR (NAMETYP,LABEL,NUMVALU,P,PP)
          CALL CHANGE  (NAMETYP,LABEL,NUMVALU,P)
          CALL LSODAHM (P)
!
!  LETS GO...
!
      WRITE(*,*) 'CALCULATING...'
      WRITE(*,*)    
      DO 20 J1=1,J1MAX
         DO 15 J=1,JMAX
            WRITE(*,*) 'OC =',FRNTRF(J),'HR =',BACKRF(J1)
            WRITE(*, 1101)
            DO 10 I=1,IMAX
               ICASE=ICASE+1
               CALL FILINPT (ION,MAN)
               REFLB=BACKRF(J1)
               REFL=FRNTRF(J)
               DO 5 K=1,NLASLAM
                  REFLOUT(K)=REFL
                  REFLBCK(K)=REFLB
    5          CONTINUE
               PUMPE=PENRGY(I)         
               CALL FILOTPT (ION,MAN)
               CALL CLEANUP (NEQ,MANCNT)
!
!              DEFINE THE PUMP SCALE PARAMETER
               IF (IPUMP .EQ. 0) FWHM=NPOINTS*TOUT
               W1=PUMPETA*PUMPE*(PUMPLAM/HC)/(RODAREA*RODL)
!					 
!              CALL THE MAIN CALCULATION ROUTINE
               CALL CRUNCH (TITLE,NEQ,MANCNT,YDOT,MAN,ION,ICASE) 
!
   10       CONTINUE
            WRITE(*,*)         
            WRITE(11,102)
   15    CONTINUE
         WRITE(11,102)
   20 CONTINUE
  100 FORMAT(A5)
  101 FORMAT(37X,D9.2)
  102 FORMAT(/)
      CLOSE(11)
!
!     INFORM THE USER THAT PROGRAM IS DONE AND WHAT RELEVANT OUTPUT IS
      write(*,*) ' Program RELaser is finished.'
      WRITE(*,*) '     MANIFOLD POPULATIONS SAVED IN POPNUM.REL'
      WRITE(*,*) '     LASER PERFORMANCE SAVED IN PERFNUM.REL'
      WRITE(6,*) ' Run another simulation? (Y/N) (DEFAULT=N)'    
      READ(*,*) RUNAGAIN
      IF (RUNAGAIN .EQ. 'y') RUNAGAIN='Y'
      IF (RUNAGAIN .EQ. 'Y') GO TO 1100
      WRITE(*,*) ' EXECUTION TERMINATED.' 
!
      STOP
      END 
!
!*********************************************************************
!
      SUBROUTINE FILINPT (ION,MAN)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      CHARACTER*2 ION(3)
      CHARACTER*7 MAN(20)
      CHARACTER*5 IDUM
      COMMON /CONCK/ NIONS,NMAN(3),Y(25),TOTLCON(3)
      COMMON /DECAY1/ DKRATE(50), NDKTIME, MANUP(50), MANLO(50)
      COMMON /DECAY2/ BILINRT(20), NBILIN, MANLOS1(20),
     -                MANLOS2(20), MANGAN1(20), MANGAN2(20), NACEPTR(20)
      COMMON /WAVLNG/ EMISLAM(5),SPO(5),ROUNDTT(5),TEMPER,OPTLNG(5),
     -                FRACUP(5),FRACLO(5),STIM(5),SPON(5),CAVALFA(5),
     -                REFLOUT(5), REFLBCK(5), SURFACET(5), RODDEX(5),
     -                NLASLAM, MANUPLZ(5), MANLOLZ(5)
      COMMON /PUMPK/ PUMPSIG(4),PUMPE,PUMPLAM,W1,PUMPETA,PMPALGN,
     -               FWHM,NPMPLV,IPUMP,MANPMP(4,2)
      COMMON /WRTBLK/ NCOL,JCOL(20),ISUM(20,20)
      integer MaxMan 
!     MaxMan replaced variable Max
!
!  THIS ROUTINE READS SPECPAR.DAT.  THE STRUCTURE OF THE FILE IS 
!  COLUMNAR RIGID BUT ALLOWS FOR A FAIRLY SIMPLE WAY TO INCREASE THE
!  NUMBER OF IONS, MANIFOLDS, DECAY TIMES, ENERGY TRANSFER RATES, ETC.
!  THE FILE IS DIVIDED INTO SEVERAL DISCRETE SECTIONS:
!      ION, MANIFOLD, CONCENTRATION IDENTIFICATION
!      SINGLE ION DECAY PROCESSES
!      BILINEAR (2-ION) ENERGY TRANSFER PROCESSES
!      LASER WAVELENGTH DEPENDENT QUANTITIES
!      PUMP PARAMETERS
!  NOTE THAT EACH OF THESE GROUPS HAVE THEIR OWN COMMON BLOCK.
!
      OPEN (UNIT=5,FILE='SPECPAR.DAT',STATUS='OLD')
!     GET NUMBER OF IONS, IONS AND CONCENTRATIONS
      READ (5,200) IDUM       
      READ (5,200) IDUM       
      READ (5,100) NIONS
      DO 10 I=1,NIONS
         READ(5,101) K1,ION(K1) 
         read(5,102) NMAN(K1)
         MaxMan=NMAN(K1)
         TOTLCON(K1)=0
         DO 5 J = 1, MaxMan
            READ (5,103) K,MAN(K),Y(K)
            TOTLCON(K1) = TOTLCON(K1) + Y(K)
    5    continue
   10 CONTINUE
!     GET SINGLE ION DECAY TIMES   
      READ (5,104) NDKTIME
      DO 20 I=1,NDKTIME
         READ (5,105) K1,MANUP(K1),MANLO(K1),DKTIME
         IF (DKTIME .GT. 0.0D0) DKRATE(K1)=1.0D0/DKTIME
         IF (DKTIME .LE. 0.0D0) DKRATE(K1)=0.0D0     
   20 CONTINUE
!     GET BILINEAR ENERGY TRANSFER PARAMETERS
      READ (5,106) NBILIN
      DO 30 I=1,NBILIN
        READ (5,107) K1,MANLOS1(K1),MANLOS2(K1),MANGAN1(K1),MANGAN2(K1),
     -     BILINTM,NACEPTR(K1)
         K=NACEPTR(K1)
         DENOM=BILINTM
         IF (DENOM .GT. 0.0D0) 
     -      BILINRT(K1)=DENOM
         IF (DENOM .LE. 0.0D0) BILINRT(K1)=0.0D0
   30 CONTINUE
!     GET THE NUMBER OF LASER WAVELENGTHS AND TEMPERATURE 
      READ (5,108) NLASLAM,TEMPER 
      DO 40 I=1,NLASLAM
!        GET SOME WAVELENGTH DEPENDENT TERMS
         READ (5,109) K1,MANUPLZ(K1),MANLOLZ(K1),EMISLAM(K1)
         READ (5,110) FRACUP(K1),FRACLO(K1)  ! BOLTZMANN FRACTIONS
         READ (5,111) STIM(K1)     ! STIMULATED EMISSION CROSS SECTION
         READ (5,111) SPONLIFE     ! SPONTANEOUS EMISSION LIFETIME
         IF (SPONLIFE .LE. 0.0D0)  SPON(K1)=0.0D0
         IF (SPONLIFE .GT. 0.0D0)  SPON(K1)=1.0D0/SPONLIFE
!        GET SOME LOSS TERMS
         READ (5,112) CAVALFA(K1)  ! BULK LOSS PER CM
         READ (5,113) REFLOUT(K1)  ! OUTPUT REFLECTIVITY
         READ (5,114) REFLBCK(K1)  ! HR REFLECTIVITY
         READ (5,115) SURFACET(K1) ! SINGLE SURFACE TRANSMISSION OF ROD
         READ (5,116) RODDEX(K1)   ! LASER ROD INDEX OF REFRACTION
   40 CONTINUE
!
!     ALLOWANCE IS MADE FOR MULTIPLE PUMP WAVELENGTHS WITH EACH PUMP
!     WAVELENGTH CAPABLE OF BEING ABSORBED FROM MULTIPLE MANIFOLDS.
!     THIS FEATURE WAS INCLUDED ON 9/15/89
C
!     GET PUMPING PARAMETERS
      READ (5,117) PUMPLAM    ! PUMP WAVELENGTH
      READ (5,124) NPMPLV     ! NUMBER OF PUMP MANIFOLDS
      DO 50 I=1,NPMPLV        
         READ (5,118) MANPMP(I,1),MANPMP(I,2) ! ABS TRANSITION MANIFOLDS
         READ (5,122) PUMPSIG(I) ! PUMP ABSORPTION CROSS SECTION 
   50 CONTINUE
      READ (5,119) PUMPE      ! PUMP ENERGY IN JOULES
      READ (5,120) FWHM       ! PUMP PULSE WIDTH
      READ (5,121) IPUMP      ! PUMP SHAPE FUNCTION
      READ (5,123) PUMPETA    ! PUMP COUPLING EFFICIENCY
      READ (5,123) PMPALGN    ! PUMP ALIGNMENT EFFICIENCY
      IF (PUMPE .LE. 0.0D0) FWHM=0.0D0
!
      READ (5,300) NCOL
      DO 60 J=1,NCOL
         READ (5,301) ICOL,JCOL(ICOL),(ISUM(ICOL,I),I=1,JCOL(ICOL))
   60 CONTINUE
!
      MANTOT=0
      DO 70 I=1,NIONS
         MANTOT=MANTOT+NMAN(I)
   70 CONTINUE
      DO 71 I=MANTOT+1,MANTOT+NLASLAM
         READ (5,302) Y(I)
   71 CONTINUE
!
      CLOSE(5)
!
  100 FORMAT (17X,I3)
  101 FORMAT (11X,I3,3X,A2)
  102 FORMAT (25X,I3)
  103 FORMAT (9X,I3,3X,A7,34X,D10.3)
  104 FORMAT (24X,I3)
  105 FORMAT (11X,I3,14X,I3,3X,I3,2X,D10.3)
  106 FORMAT (32X,I3)
  107 FORMAT (1X,I3,9X,I3,4X,I3,7X,I3,4X,I3,9X,D10.3,12X,I3)
  108 FORMAT (33X,I3,20X,F7.1)
  109 FORMAT (11X,I3,19X,I3,3X,I3,13X,D11.4)
  110 FORMAT (43X,D10.3,9X,D10.3)
  111 FORMAT (61X,D10.3)
  112 FORMAT (44X,D10.3)
  113 FORMAT (44X,D10.3)
  114 FORMAT (46X,D10.3)
  115 FORMAT (54X,D10.3)
  116 FORMAT (40X,D10.3)
  117 FORMAT (17X,F7.3)
  118 FORMAT (35X,I3,3X,I3)
  119 FORMAT (33X,D10.3)
  120 FORMAT (33X,D10.3)
  121 FORMAT (33X,I3)
  122 FORMAT (40X,D10.3)
  123 FORMAT (40X,D10.3)
  124 FORMAT (54X,I2)
  200 FORMAT (A5)
  300 FORMAT (8X,I2)
  301 FORMAT (9X,I2,24X,I2,12X,10(I2,1X))
  302 FORMAT (D10.3)
!
      RETURN
      END 
!
!*********************************************************************
!
      SUBROUTINE FILOTPT (ION,MAN)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      CHARACTER*2 ION(3)
      CHARACTER*7 MAN(20)
      integer MaxMan

      COMMON /CONCK/ NIONS,NMAN(3),Y(25),TOTLCON(3)
      COMMON /DECAY1/ DKRATE(50), NDKTIME, MANUP(50), MANLO(50)
      COMMON /DECAY2/ BILINRT(20), NBILIN, MANLOS1(20),
     -                MANLOS2(20), MANGAN1(20), MANGAN2(20), NACEPTR(20)
      COMMON /WAVLNG/ EMISLAM(5),SPO(5),ROUNDTT(5),TEMPER,OPTLNG(5),
     -                FRACUP(5),FRACLO(5),STIM(5),SPON(5),CAVALFA(5),
     -                REFLOUT(5), REFLBCK(5), SURFACET(5), RODDEX(5),
     -                NLASLAM, MANUPLZ(5), MANLOLZ(5)
      COMMON /PUMPK/ PUMPSIG(4),PUMPE,PUMPLAM,W1,PUMPETA,PMPALGN,
     -               FWHM,NPMPLV,IPUMP,MANPMP(4,2)
      COMMON /WRTBLK/ NCOL,JCOL(20),ISUM(20,20)
!
!  THIS ROUTINE SIMPLY DUMPS BACK THE PARAMETERS FROM SPECPAR.DAT
!  THAT WAS READ IN.  IT IS A CHECK THAT FORMATS ARE CORRECT.
!  WHEN THE USER IS COMFORTABLE WITH THE SPECPAR.DAT STRUCTURE,
!  THIS ROUTINE CAN BE DEACTIVATED.  THE SAME INFORMATION
!  IS CONTAINED IN THE OFFICIAL OUTPUT FILE  DUMPIT.REL
!
      OPEN (UNIT=4,FILE='RELASER.REL',STATUS='replace')
!
      K=0
      DO 10 I=1,NIONS
         MaxMan = NMAN(I)
      DO 10 J=1,MaxMan
         K=K+1
         WRITE (4,103) K,MAN(K),Y(K)
   10 CONTINUE
!
      WRITE (4,104) NDKTIME
      DO 20 I=1,NDKTIME
         WRITE (4,105) I,MANUP(I),MANLO(I),DKRATE(I)
   20 CONTINUE
!
      WRITE (4,106) NBILIN
      DO 30 I=1,NBILIN
         WRITE (4,107) I,MANLOS1(I),MANLOS2(I),MANGAN1(I),MANGAN2(I),
     -   BILINRT(I),NACEPTR(I)
   30 CONTINUE
!
      WRITE (4,108) NLASLAM,TEMPER
      DO 40 I=1,NLASLAM
         WRITE (4,109) I,MANUPLZ(I),MANLOLZ(I),EMISLAM(I)
         WRITE (4,110) FRACUP(I),FRACLO(I)
         WRITE (4,111) STIM(I)
         WRITE (4,111) SPON(I)
         WRITE (4,112) CAVALFA(I)
         WRITE (4,113) REFLOUT(I)
         WRITE (4,114) REFLBCK(I)
         WRITE (4,115) SURFACET(I)
         WRITE (4,116) RODDEX(I)
   40 CONTINUE
!
      WRITE (4,117) PUMPLAM
      DO 50 I=1,NPMPLV
         WRITE (4,118) MANPMP(I,1),MANPMP(I,2)
         WRITE (4,122) PUMPSIG(I)
   50 CONTINUE
      WRITE (4,119) PUMPE
      WRITE (4,120) FWHM
      WRITE (4,121) IPUMP
      
      WRITE (4,123) PUMPETA
      WRITE (4,123) PMPALGN
!
      WRITE (4,300) NCOL
      DO 60 J=1,NCOL
         WRITE (4,301) J,JCOL(J),(ISUM(J,I),I=1,JCOL(J))
   60 CONTINUE
!
  300 FORMAT (8X,I2)
  301 FORMAT (9X,I2,24X,I2,12X,10(I2,1X))
!
      CLOSE(4)
!
  103 FORMAT (9X,I3,3X,A7,32X,1PD10.3)
  104 FORMAT (24X,I3)
  105 FORMAT (11X,I3,14X,I3,3X,I3,2X,1PD10.3)
  106 FORMAT (32X,I3)
  107 FORMAT (I3,9X,I3,4X,I3,7X,I3,3X,I3,9X,1PD10.3,9X,I3)
  108 FORMAT (33X,I3,20X,F7.1)
  109 FORMAT (11X,I3,19X,I3,3X,I3,13X,1PD11.4)
  110 FORMAT (43X,1PD10.3,9X,1PD10.3)
  111 FORMAT (61X,1PD10.3)
  112 FORMAT (44X,1PD10.3)
  113 FORMAT (44X,1PD10.3)
  114 FORMAT (46X,1PD10.3)
  115 FORMAT (54X,1PD10.3)
  116 FORMAT (40X,1PD10.3)
  117 FORMAT (17X,F7.3)
  118 FORMAT (35X,I3,3X,I3)
  119 FORMAT (33X,1PD10.3)
  120 FORMAT (33X,1PD10.3)
  121 FORMAT (33X,I3)
  122 FORMAT (40X,1PD10.3)  
  123 FORMAT (40X,1PD10.3)
!
      RETURN
      END 
!
!*********************************************************************
!
      SUBROUTINE CAVPRAM (NAMETYP,LABEL,N,P,PP)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      CHARACTER*60 NAMETYP,LABEL(100)
      DIMENSION P(20),PP(20)
!
!     INPUT SECTION FOR THE CAVITY PARAMETERS
!     (INCLUDES Q-SWITCH AND RESONATOR TYPE)
!     THESE PARAMETERS HAVE DEFAULT VALUES READ IN FROM LASPAR.DAT
!     THIS MENU ALLOWS THE USER TO CHANGE THEM WHILE RUNNING...
!
      N=8  ! N IS THE NUMBER OF ENTRIES IN THE LIST
      NAMETYP=' ******  CAVITY INPUT PARAMETERS  ******'
!
      LABEL(1)=' CAVITY LENGTH  (CM)'
      LABEL(2)=' CAVITY (MODE) RADIUS  (CM)'
      LABEL(3)=' ROD LENGTH  (CM)'
      LABEL(4)=' ROD RADIUS  (CM)'
      LABEL(5)=' Q-SWITCH DELAY TIME (= OR < 0 FOR NO Q-SWITCH)'
      LABEL(6)=' Q-SWITCH OPEN TIME (= 0 FOR NONE)'
      LABEL(7)=' RING (1) OR LINEAR (2) RESONATOR'
      LABEL(8)=' END (1) OR SIDE (2) PUMPING'
!
      P(1)=PP(1)
      P(2)=PP(2)
      P(3)=PP(3)
      P(4)=PP(4)
      P(5)=PP(5)
      P(6)=PP(6)
      P(7)=PP(7)
      P(8)=PP(8)
!
      RETURN
      END
!
!*********************************************************************
!
      SUBROUTINE LSODAPR (NAMETYP,LABEL,N,P,PP)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      CHARACTER*60 NAMETYP,LABEL(100)
      DIMENSION P(20),PP(20)
!
!     INPUT SECTION FOR INTEGRATION RELATED PARAMETERS
!     THESE PARAMETERS HAVE DEFAULT VALUES READ IN FROM LASPAR.DAT
!     THIS MENU ALLOWS THE USER TO CHANGE THEM WHILE RUNNING...
!
!     THIS SECTION IS CURRENTLY SET UP FOR SIMPLE INTEGRATION ROUTINE
!     USED IN THIS PROGRAM. MODIFICATION WILL BE NECESSARY HERE IF THE
!     INTEGRATION ROUTINE IS CHANGED... TO RUNGE KUTTA FOR EXAMPLE.
!
      N=3  ! N IS THE NUMBER OF ENTRIES IN THE LIST.
      NAMETYP=' ******  INTEGRATION RELATED PARAMETERS  ******'
!
      LABEL(1)=' STEP SIZE  (MICRO SEC)'
      LABEL(2)=' NUMBER OF POINTS'
      LABEL(3)=' TIME INTERVAL BETWEEN PLOTTED POINTS  (MICRO SEC)'
!
      P(1)=PP(9)
      P(2)=PP(10)
      P(3)=PP(11)     
!
      RETURN
      END
!
!
!*********************************************************************
!
      SUBROUTINE CHANGE (NAMETYP,LABEL,N,P)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      CHARACTER*60 NAMETYP,LABEL(100)
      CHARACTER*1 YESNO
      DIMENSION P(20)
!
!  ROUTINE TO CHANGE DEFAULT VALUES OF THE PARAMETERS FROM LASPAR.DAT
!
   10 CONTINUE
      YESNO='N'
      WRITE(*,100) NAMETYP
      WRITE(*,101) (I,LABEL(I),P(I),I=1,N)
      WRITE(*,102)
      READ(*,103) YESNO
      if (YESNO.eq.'y') YESNO = 'Y'
      IF (YESNO .NE. 'Y') GO TO 200
      WRITE(*,104)
      READ(*,*) X
      K=INT(X+.00001)
      WRITE(*,105) LABEL(K)
      READ(*,*) P(K)
      GO TO 10
!
  100 FORMAT (///A60)
  101 FORMAT (I3,A60,1PD12.3)
  102 FORMAT (//' DO YOU WANT TO CHANGE ANY DATA?  (Y/N)  (DEFAULT N)')
  103 FORMAT (A1)
  104 FORMAT (/' WHICH ENTRY DO YOU WANT TO CHANGE?')
  105 FORMAT(/' INPUT NEW VALUE FOR'/A60)
!
  200 RETURN
      END
!
!
!*********************************************************************
!
      SUBROUTINE CAVHUMN (P)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION P(20)
      COMMON /CAVK/ CAVL,CMAREA,RODAREA,RODL,CMRAD,RODRAD,PABSL,
     -              TQ,TQI,RESTYPE,PUMPTYPE,IQSWITCH
      COMMON /PHYSK/ CC,HC,PI 
!
!  THIS ROUTINE PLACES THE CAVITY PARAMETERS IN HUMAN READBLE
!  VARIABLE NAMES.  IT ALSO DEFINES THE COMMON BLOCK /CAVK/
!
! THE CAVITY PARAMETERS
!
      CAVL=P(1)     ! CAVITY LENGTH (CM)
      CMRAD=P(2)    ! CAVITY (MODE) RADIUS (CM)
      RODL=P(3)     ! ROD LENGTH (CM)
      RODRAD=P(4)   ! ROD RADIUS (CM)
      TQ=P(5)       ! Q-SWITCH DELAY (<=0 FOR NO Q-SWITCH)
      TQI=P(6)      ! Q-SWITCH OPEN TIME INTERVAL (=0 FOR NONE)
      RESTYPE=P(7)  ! RESONATOR TYPE (1=RING, 2=LINEAR)
      PUMPTYPE=P(8) ! PUMP TYPE (1=END, 2=SIDE)
      CMAREA=PI*CMRAD*CMRAD
      RODAREA=PI*RODRAD*RODRAD
      IF (PUMPTYPE.EQ.1) PABSL=RODL
      IF (PUMPTYPE.EQ.2) PABSL=2*RODRAD
!
      IQSWITCH=1    ! Q-SWITCH FLAG
      IF (TQ .LE. 0.0D0) IQSWITCH=0
      IF (TQ .LE. 0.0D0) TQ=0.0D0
!
      RETURN
      END
!
!*********************************************************************
!
      SUBROUTINE LSODAHM (P)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION P(20)
      real tsum
!
      COMMON /TIMEK/ DELTAT, TOUT, T, NPOINTS
      COMMON /LSODAK/ RTOL, ATOL(4), RWORK(84),
     -                ITOL, ITASK, ISTATE, IOPT, LRW, LIW,
     -                JT, MF, H0, HMAX, HMIN, MXSTEP, IWORK(24)
!
!  THIS ROUTINE PLACES THE INTEGRATION PARAMETERS IN HUMAN READBLE
!  VARIABLE NAMES.  IT ALSO DEFINES THE COMMON BLOCKS /TIMEK/ AND
!  /LSODAK/.  
!
!  THE INTEGRATION PARAMETERS
!
      DELTAT=P(1)        ! STEP SIZE (MICROSECONDS)
      tsum = P(2)+.00001 
      NPOINTS=IFIX(tsum) ! NUMBER OF POINTS
      TOUT=P(3)          ! INTERVAL BETWEEN POINTS (MICROSECONDS)          
!
      ITOL=2
      RTOL=1.0D-8
      ATOL(1)=1.0D6
      ATOL(2)=1.0D6
      ATOL(3)=1.0D6
      ATOL(4)=1.0D-1
      ITASK=1
      ISTATE=1
      IOPT=1
      LRW=84
      LIW=24
      JT=1
      MF=21
      DO 1 I=5,10
         RWORK(I)=0.0D0
         IWORK(I)=0
    1 CONTINUE
      H0=0.01D0
      HMAX=0.01D0
      HMIN=1.0D-9
      MXSTEP=1500
      RWORK(5)=H0
      RWORK(6)=HMAX
      RWORK(7)=HMIN
      IWORK(6)=MXSTEP
!
      RETURN
      END
!
!*********************************************************************
!
      SUBROUTINE CLEANUP (NEQ,MANCNT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
!
      COMMON /CAVK/ CAVL,CMAREA,RODAREA,RODL,CMRAD,RODRAD,PABSL,
     -              TQ,TQI,RESTYPE,PUMPTYPE,IQSWITCH
      COMMON /CONCK/ NIONS,NMAN(3),Y(25),TOTLCON(3)
      COMMON /WAVLNG/ EMISLAM(5),SPO(5),ROUNDTT(5),TEMPER,OPTLNG(5),
     -                FRACUP(5),FRACLO(5),STIM(5),SPON(5),CAVALFA(5),
     -                REFLOUT(5), REFLBCK(5), SURFACET(5), RODDEX(5),
     -                NLASLAM, MANUPLZ(5), MANLOLZ(5)
      COMMON /PHYSK/ CC,HC,PI
!
!   CALCULATES SOME WAVELENGTH DEPENDENT TERMS.
!   ALSO, FINDS THE TOTAL NUMBER OF RATE EQUATIONS AND INITIALIZES THE
!   PHOTON FLUX VALUES TO ZERO.
!   COMMON BLOCK /WAVLNG/ IS DEFINED HERE.
!   
!   THE WAVELENGTH DEPENDENT TERMS
!
      DO 10 I=1,NLASLAM      
      OPTLNG(I)=RODL*RODDEX(I)+CAVL-RODL        ! OPTICAL CAVITY LENGTH
      B=RODAREA/(4.0D0*PI*OPTLNG(I)*OPTLNG(I))  ! SE GEOETRICAL FACTOR
      SPO(I)=B*RODL/OPTLNG(I)                   ! SE FACTOR
      ROUNDTT(I)=RESTYPE*OPTLNG(I)/CC           ! ROUND TRIP TIME
   10 CONTINUE
!
!  FIND THE TOTAL NUMBER OF MANIFOLDS INVOLVED AND TOTAL NUMBER
!  OF RATE EQUATIONS AND INITIALIZE PHOTON FLUXES TO ZERO. THIS
!  PHOTON INITIALIZATION COULD POSSIBLY BE DONE IN THE INPUT FILE.
!
      MANCNT=0
      DO 20 I=1,NIONS
         MANCNT=MANCNT+NMAN(I)
   20 CONTINUE
!
      N1=MANCNT+1
      NEQ=MANCNT+NLASLAM
      DO 30 I=N1,NEQ
         Y(I)=Y(I)
   30 CONTINUE
!
      RETURN
      END
!
!*********************************************************************
!
      SUBROUTINE CRUNCH (TITLE,NEQ,MANCNT,YDOT,MAN,ION,ICASE)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      CHARACTER*7 MAN(20)
      CHARACTER*2 ION(3)
      CHARACTER TITLE*80	  
!
      DIMENSION REACT(104),YDOT(25),YMAX(25),YPRINT(25), OUTSAV(5)
!
!  REACT AND ITS DIMENSION (NREACT, SEE BELOW) GIVE US THE TOTAL
!  NUMBER OF POSSIBLE INDIVIDUAL RATE TERMS.  REACT WILL BE USED
!  TO ACCUMULATE THE CONTRIBUTIONS OF EACH.
!
      COMMON /CAVK/ CAVL,CMAREA,RODAREA,RODL,CMRAD,RODRAD,PABSL,
     -              TQ,TQI,RESTYPE,PUMPTYPE,IQSWITCH
      COMMON /PUMPK/ PUMPSIG(4),PUMPE,PUMPLAM,W1,PUMPETA,PMPALGN,
     -               FWHM,NPMPLV,IPUMP,MANPMP(4,2)
      COMMON /CONCK/ NIONS,NMAN(3),Y(25),TOTLCON(3)
      COMMON /DECAY1/ DKRATE(50), NDKTIME, MANUP(50), MANLO(50)
      COMMON /DECAY2/ BILINRT(20), NBILIN, MANLOS1(20),
     -                MANLOS2(20), MANGAN1(20), MANGAN2(20), NACEPTR(20)
      COMMON /WAVLNG/ EMISLAM(5),SPO(5),ROUNDTT(5),TEMPER,OPTLNG(5),
     -                FRACUP(5),FRACLO(5),STIM(5),SPON(5),CAVALFA(5),
     -                REFLOUT(5), REFLBCK(5), SURFACET(5), RODDEX(5),
     -                NLASLAM, MANUPLZ(5), MANLOLZ(5)
      COMMON /TIMEK/ DELTAT, TOUT, T, NPOINTS
      COMMON /LSODAK/ RTOL, ATOL(4), RWORK(84),
     -                ITOL, ITASK, ISTATE, IOPT, LRW, LIW,
     -                JT, MF, H0, HMAX, HMIN, MXSTEP, IWORK(24)
      COMMON /PHYSK/ CC,HC,PI
      COMMON /WRTBLK/ NCOL,JCOL(20),ISUM(20,20)
      CHARACTER LCHAR*1
      character LOut*128     ! Output File Name
      character LShort*128
      real tsum      
! 
!  THIS IS THE ROUTINE WHICH DOES THE INTEGRATION (SIMPLE ROUTINE)
!
      LCHAR=CHAR(9)
      IFLAG=0
      PLSMIN=0.0D0
      PLSMAX=0.0D0
      NREACT = NDKTIME + NBILIN +NPMPLV + 8 * NLASLAM
      DO 10 I=1,NREACT
           REACT(I)=0.0D0
   10 CONTINUE
!
      T=DELTAT
!
      call my_FillString(lshort,' ')
      LShort = 'DumpIt_'
      call OFName(LShort,LOut,ICASE) ! Create output file name
!
      OPEN (UNIT = 4, FILE = LOut, STATUS = 'replace')
!      OPEN (UNIT = 4, FILE = LOut, STATUS = 'NEW')
!
      OPEN (UNIT=8,FILE='POPNUM.REL',STATUS='replace')
	  WRITE(8,*) 'TIME',(LCHAR,MAN(I),I=1,NCOL-1),LCHAR,'FLUX'
!
      CALL DUMPIT (TITLE,NEQ,MANCNT,YDOT,MAN,ION,T1S,T2S,T3S)	  
      CALL CAVLOS (RODL,OUTSAV)
!
      tsum = 0.0001 + TOUT / DELTAT
      INTIME=IFIX(tsum)
      DO 80 KOUNT=1,NPOINTS
         DO 20 I=1,NEQ
            YMAX(I)=-1.0D20
   20    CONTINUE
         DO 50 INKOUNT=1,INTIME
            CALL RATEEQ(NEQ,MANCNT,REACT,YDOT,Y,OUTSAV)
            DO 30 I=1,NEQ
               Y(I) = Y(I) + YDOT(I) * DELTAT
               IF ( Y(I) .LT. 0.0D0)  Y(I) = 0.0D0
               IF ( Y(I) .LT. 1.0D-10 .AND. I.GT. MANCNT)  Y(I) = 0.0D0
               IF ( Y(I) .GT. YMAX(I) )  YMAX(I)=Y(I)
               IF ( YMAX(I) .LE. 1.0D-32 ) YMAX(I)=1.0D-32
   30       CONTINUE      
!
            DO 40 I=1,NLASLAM
               K1=MANUPLZ(I)
              K2=MANCNT+I
              IF (Y(K1).LT.0.95D0*(T1S+T2S*(TOTLCON(1)-Y(10)))/T3S
     -           .OR. Y(K2).LT.1.0D10) GO TO 40
!              IF (Y(K1).LT.(T1S+T2S*(TOTLCON(1)))/T3S) GO TO 40
              PLSMAX=T
              IF (IFLAG .EQ. 1) GO TO 40
              IFLAG=1
              PLSMIN=T
   40       CONTINUE
!
            T=T+DELTAT
   50    CONTINUE
!
         DO 60 I=1,MANCNT
            YMAX(I)=Y(I)
   60    CONTINUE
!
         DO 70 I=1,NCOL
            IJCOL=JCOL(I)
            YPRINT(I)=0.0D0
         DO 70 J=1,IJCOL
            YPRINT(I)=YPRINT(I) + YMAX(ISUM(I,J))
   70    CONTINUE
!
         WRITE(8,100) T,(LCHAR,YPRINT(I),I=1,NCOL)
! 
   80 CONTINUE
      CLOSE(8)
!
      CALL MOREDMP (NREACT,MANCNT,REACT,NEQ,Y,PLSMIN,PLSMAX,MAN)
!
      DO 90 I=1,NCOL
         IJCOL=JCOL(I)
         WRITE(4,101) I,(ISUM(I,J),MAN(ISUM(I,J)),J=1,IJCOL)
   90 CONTINUE
!
      CLOSE(4)
!
  100 FORMAT(1PE11.5,11(A2,E11.5))
  101 FORMAT(I2,5(2X,I2,1X,A7))
!
      RETURN
      END
!
!*********************************************************************
!
!     SEPARATED FROM CRUNCH IN MARCH, 2003
      SUBROUTINE RATEEQ (NEQ,MANCNT,REACT,YDOT,Y,OUTSAV)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
!
      DIMENSION REACT(104),YDOT(25),OUTSAV(5),Y(25)
!
!
!     REACT AND ITS DIMENSION (NREACT, SEE BELOW) GIVE US THE TOTAL
!     NUMBER OF POSSIBLE INDIVIDUAL RATE TERMS.  REACT WILL BE USED
!     TO ACCUMULATE THE CONTRIBUTIONS OF EACH.
!
      COMMON /CAVK/ CAVL,CMAREA,RODAREA,RODL,CMRAD,RODRAD,PABSL,
     -              TQ,TQI,RESTYPE,PUMPTYPE,IQSWITCH
      COMMON /PUMPK/ PUMPSIG(4),PUMPE,PUMPLAM,W1,PUMPETA,PMPALGN,
     -               FWHM,NPMPLV,IPUMP,MANPMP(4,2)
C      COMMON /CONCK/ NIONS,NMAN(3),Y(25),TOTLCON(3)

      COMMON /DECAY1/ DKRATE(50), NDKTIME, MANUP(50), MANLO(50)
      COMMON /DECAY2/ BILINRT(20), NBILIN, MANLOS1(20),
     -                MANLOS2(20), MANGAN1(20), MANGAN2(20), NACEPTR(20)
      COMMON /WAVLNG/ EMISLAM(5),SPO(5),ROUNDTT(5),TEMPER,OPTLNG(5),
     -                FRACUP(5),FRACLO(5),STIM(5),SPON(5),CAVALFA(5),
     -                REFLOUT(5), REFLBCK(5), SURFACET(5), RODDEX(5),
     -                NLASLAM, MANUPLZ(5), MANLOLZ(5)
      COMMON /TIMEK/ DELTAT, TOUT, T, NPOINTS
      COMMON /LSODAK/ RTOL, ATOL(4), RWORK(84),
     -                ITOL, ITASK, ISTATE, IOPT, LRW, LIW,
     -                JT, MF, H0, HMAX, HMIN, MXSTEP, IWORK(24)
      COMMON /PHYSK/ CC,HC,PI
      COMMON /WRTBLK/ NCOL,JCOL(20),ISUM(20,20)
! 
!     THIS IS THE ROUTINE WHICH CONSTRUCTS THE RATE EQUATIONS. 
!
      NTERM=0
      DO 20 I=1,NEQ
      YDOT(I)=0.0D0      
   20 CONTINUE
!
!     THE LINEAR DECAY PROCESSES
      DO 30 I=1,NDKTIME
         K1=MANUP(I)
         K2=MANLO(I)
         R1 = Y(K1) * DKRATE(I)
         NTERM=NTERM+1
         REACT(NTERM)=REACT(NTERM)+R1
         YDOT(K1) = YDOT(K1) - R1 
         YDOT(K2) = YDOT(K2) + R1 
   30 CONTINUE
!
!     THE BILINEAR ENERGY TRANSFER PROCESSES
      DO 40 I=1,NBILIN
         K1=MANLOS1(I)
         K2=MANLOS2(I)
         K3=MANGAN1(I)
         K4=MANGAN2(I)
         R1 = Y(K1) * Y(K2) * BILINRT(I)
         NTERM=NTERM+1
         REACT(NTERM)=REACT(NTERM)+R1
         YDOT(K1) = YDOT(K1) - R1 
         YDOT(K2) = YDOT(K2) - R1 
         YDOT(K3) = YDOT(K3) + R1 
         YDOT(K4) = YDOT(K4) + R1 
   40 CONTINUE
!
!     THE PUMPING TERMS
      SUM=0.0D0
      SUM2=0.0D0
      DO 42 I=1,NPMPLV
         SUM = SUM-PUMPSIG(I) * PABSL * Y(MANPMP(I,1))
         SUM2=SUM2+1.0D0-DEXP(-PUMPSIG(I) * PABSL * Y(MANPMP(I,1)))
   42 CONTINUE
!
      RT = W1 * PUMP(IPUMP,T,FWHM,PI) * (1.0D0 - DEXP(SUM))
      DO 43 I=1,NPMPLV
         EARG = 1.0D0-DEXP(-PUMPSIG(I) * PABSL * Y(MANPMP(I,1)))
         R1=RT*EARG/SUM2
         RR = R1
         NTERM=NTERM+1
         REACT(NTERM)=REACT(NTERM) + R1 
         YDOT(MANPMP(I,1)) = YDOT(MANPMP(I,1)) - RR 
         YDOT(MANPMP(I,2)) = YDOT(MANPMP(I,2)) + RR 
   43 CONTINUE
! 
!     CAVITY LOSS, AND SPONTANEOUS AND STIMULATED EMISSION TERMS
      DO 50 I=1,NLASLAM
         K1=MANLOLZ(I)
         K2=MANUPLZ(I)
         K3=MANCNT+I
!
         R1UP = STIM(I) * CC * Y(K3) * FRACUP(I)*Y(K2)
         R1LO = STIM(I) * CC * Y(K3) * FRACLO(I)*Y(K1)
!
         R1 = R1UP - R1LO
         R2 = R1 * RODL/OPTLNG(I)
         R3 = SPO(I) * FRACUP(I) * Y(K2) * SPON(I)
         R4 = Y(K3) * CAVALFA(I)
         R5 = Y(K3) * SURFACET(I)
         R6 = Y(K3) * REFLBCK(I)
         R7 = Y(K3) * REFLOUT(I)
!
         GAIN = STIM(I)*CC*(FRACUP(I)*Y(K2) - FRACLO(I)*Y(K1))
         XLOSS = CAVALFA(I)+SURFACET(I)+REFLBCK(I)+REFLOUT(I)
! 
!        Q-SWITCH ROUTINE
         R8PRIME = 0.0D0
         R8=0
!         IF (TQ-T .GT. 0.0D0) R8PRIME = 1.0D8     !OPEN QS - stays open
!        If active opens QS in the time interval TQ < T > TQ+TQI
          IF ((TQ .GT. 0.00D0) .AND. (T .LT. TQ)) R8PRIME = 1.0D8
          IF ((TQI .GT. 0.0D0) .AND. (T .GT. TQ+TQI)) R8PRIME = 1.0D8          
         R8 = Y(K3) * R8PRIME
         IF (OUTSAV(I) .LT. .01D0) THEN     
	        XLOSS = XLOSS + 1.0D8
	        YDUM = Y(K3) + R3 * DELTAT
            R4 = YDUM * CAVALFA(I)
            R5 = YDUM * SURFACET(I)
            R6 = YDUM * REFLBCK(I)
            R7 = YDUM * REFLOUT(I)
	        R8 = YDUM * 1.0D8
         END IF
         GAIN = GAIN * (Y(K3) + R3*DELTAT) * RODL/OPTLNG(I)     
         XLOSS = (XLOSS + R8PRIME) * (Y(K3) + R3*DELTAT)
         RT = R4 + R5 + R6 + R7 + R8
!	  
!        WHAT IS THIS CHECKING FOR...?
         IF (Y(K3) + (GAIN-XLOSS)*DELTAT .LT.0.0D0) THEN
            TEMP=Y(K3) + (R2+R3)*DELTAT
	        DENOM=RT*DELTAT
	        RECIP=0.0D0
	        IF (DENOM .NE. 0.0D0) RECIP=1.0D0/DENOM
	        R4 = R4 * TEMP*RECIP
	        R5 = R5 * TEMP*RECIP
	        R6 = R6 * TEMP*RECIP
	        R7 = R7 * TEMP*RECIP
	        R8 = R8 * TEMP*RECIP	 
	        RT=YDOT(K3) + R3 + R2 + Y(K3)/DELTAT
         END IF
         RR=RT
!
         YDOT(K1) = YDOT(K1) + R1
         YDOT(K2) = YDOT(K2) - R1
         YDOT(K3) = YDOT(K3) + R2 + R3 - RR      
!
         REACT(NTERM+1)=REACT(NTERM+1) + R1
         REACT(NTERM+2)=REACT(NTERM+2) + R2
         REACT(NTERM+3)=REACT(NTERM+3) + R3 
         REACT(NTERM+4)=REACT(NTERM+4) + R4
         REACT(NTERM+5)=REACT(NTERM+5) + R5
         REACT(NTERM+6)=REACT(NTERM+6) + R6
         REACT(NTERM+7)=REACT(NTERM+7) + R7
         REACT(NTERM+8)=REACT(NTERM+8) + R8     
!
         NTERM = NTERM + 9
!
   50 CONTINUE
   
      RETURN
      END
!*********************************************************************
!
      SUBROUTINE CAVLOS (RODL,OUTSAV)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
!     
      COMMON /WAVLNG/ EMISLAM(5),SPO(5),ROUNDTT(5),TEMPER,OPTLNG(5),
     -                FRACUP(5),FRACLO(5),STIM(5),SPON(5),CAVALFA(5),
     -                REFLOUT(5), REFLBCK(5), SURFACET(5), RODDEX(5),
     -                NLASLAM, MANUPLZ(5), MANLOLZ(5)
      DIMENSION OUTSAV(5)
!
!  THIS SUBROUTINE CONVERTS THE REFLECTANCE, TRANSMITTANCE, AND BULK
!  ABSORPTION TERMS TO EQUIVALENT LOSS FACTORS.  RATHER THAN GROUP
!  THEM INTO A SINGLE CAVITY LIFETIME FACTOR, WE ARE KEEPING THEM
!  SEPARATE TO ALLOW A BOOKKEEPING ASSESSMENT OF THEIR RELATIVE
!  IMPACT ON THE LASER PERFORMANCE.
!
!  NOTE ... THE CONVERTED FACTORS ARE RETURNED IN THE SAME
!           STORAGE LOCATIONS.
!
      DO 10 I=1,NLASLAM
      OUTSAV(I)   = -LOG(REFLOUT(I))
      CAVALFA(I)  = RESTYPE * RODL * CAVALFA(I) / ROUNDTT(I)
      REFLOUT(I)  = -LOG(REFLOUT(I))/ROUNDTT(I)
      REFLBCK(I)  = -LOG(REFLBCK(I))/ROUNDTT(I)
      SURFACET(I) = 2.0D0 * (1.0D0-SURFACET(I))/ROUNDTT(I)
   10 CONTINUE
!      
      RETURN 
      END
!
!*********************************************************************
!
      SUBROUTINE DUMPIT (TITLE,NEQ,MANCNT,YDOT,MAN,ION,T1S,T2S,T3S)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      CHARACTER*7 MAN(20)
      CHARACTER*2 ION(3)
	  CHARACTER TITLE*80
	  CHARACTER DAT*9,TIM*8	  
!
      DIMENSION YDOT(25),THRESH(5)
!
      COMMON /CAVK/ CAVL,CMAREA,RODAREA,RODL,CMRAD,RODRAD,PABSL,
     -              TQ,TQI,RESTYPE,PUMPTYPE,IQSWITCH
      COMMON /PUMPK/ PUMPSIG(4),PUMPE,PUMPLAM,W1,PUMPETA,PMPALGN,
     -               FWHM,NPMPLV,IPUMP,MANPMP(4,2)
      COMMON /CONCK/ NIONS,NMAN(3),Y(25),TOTLCON(3)
      COMMON /DECAY1/ DKRATE(50), NDKTIME, MANUP(50), MANLO(50)
      COMMON /DECAY2/ BILINRT(20), NBILIN, MANLOS1(20),
     -                MANLOS2(20), MANGAN1(20), MANGAN2(20), NACEPTR(20)
      COMMON /WAVLNG/ EMISLAM(5),SPO(5),ROUNDTT(5),TEMPER,OPTLNG(5),
     -                FRACUP(5),FRACLO(5),STIM(5),SPON(5),CAVALFA(5),
     -                REFLOUT(5), REFLBCK(5), SURFACET(5), RODDEX(5),
     -                NLASLAM, MANUPLZ(5), MANLOLZ(5)
      COMMON /TIMEK/ DELTAT, TOUT, T, NPOINTS
      COMMON /LSODAK/ RTOL, ATOL(4), RWORK(84),
     -                ITOL, ITASK, ISTATE, IOPT, LRW, LIW,
     -                JT, MF, H0, HMAX, HMIN, MXSTEP, IWORK(24)
      COMMON /PHYSK/ CC,HC,PI
!
!  THE FIRST OUTPUT SECTION DOES LITTLE MORE THAN REPORT THE INPUT
!  PARAMETERS.  A FEW ADDITIONAL SIMPLY CALCULATED VALUES ARE ALSO
!  GIVEN AND, IN A FEW CASES, UNITS CONVERSIONS ARE MADE.
!  NOTE... DECAY TIMES HAVE BEEN CONVERTED TO RATES (1/microsec).
!
      DAT = '         '
      TIM = '        '       
      WRITE(4,100)
      WRITE(4,101) TITLE,DAT,TIM
!      WRITE(6,101) TITLE,DAT,TIM
 
      WRITE(4,102) DELTAT,TOUT,NPOINTS
      WRITE(4,103) CAVL,CMAREA,RODL,RODRAD,PABSL,TQ,TQI,IQSWITCH
      DO 9 J=1,NPMPLV
         WRITE(4,104) IPUMP,FWHM,PUMPSIG(J),PUMPE,PUMPLAM,W1,
     -      PUMPETA,PMPALGN, ( MANPMP(J,I),I=1,2)
    9 CONTINUE
      WRITE(4,105) NIONS
      WRITE(4,106) (I,ION(I),NMAN(I),I=1,NIONS)
      WRITE(4,107) (I,MAN(I),Y(I),I=1,MANCNT)
      WRITE(4,108) (I,TOTLCON(I),I=1,NIONS)
      WRITE(4,109) NDKTIME
      WRITE(4,110) (I,MANUP(I),MANLO(I),DKRATE(I),I=1,NDKTIME)
      WRITE(4,111) NBILIN
      WRITE(4,112) (I,MANLOS1(I),MANLOS2(I),MANGAN1(I), MANGAN2(I),
     -              BILINRT(I),NACEPTR(I),I=1,NBILIN)
!
  100 FORMAT('THIS IS THE OUTPUT FILE  ** DUMPIT.REL **',
     -       '          VERSION 2.71(a)  ',/)
  101 FORMAT('',//,1X,A80,/,' DATE:',A9,6X,'TIME:',A8)	 
  102 FORMAT(/,'SMALLEST INTEGRATION STEP, DELTA T    =',1PD10.3,/,
     -       'TIME INTERVAL BETWEEN PLOTTED POINTS  =',D10.3,/,
     -       'NUMBER OF POINTS WRITTEN TO PLOT FILE =',I6)
  
  103 FORMAT (/'CAVITY LENGTH =',1PD10.3,/,
     -        'CAVITY AREA   =',D10.3,/,
     -        'ROD LENGTH    =',D10.3,/,
     -        'PUMP ABS. PATH=',D10.3,/,
     -        'Q-SWITCH DELAY=',D10.3,/,
     -        'Q-SWITCH FLAG =',I3)
  104 FORMAT (/'PUMP SHAPE FUNCTION      =',I3,/,
     -         'PUMP FWHM                =',1PD10.3,/,
     -         'PUMP ABS. CROSS SECTION  =',D10.3,/,
     -         'PUMP ENERGY              =',D10.3,/,
     -         'PUMP WAVELENGTH          =',D10.3,/,
     -         'PUMP SCALE FACTOR, W1    =',D10.3,/,
     -         'NET PUMP EFFICIENCY      =',D10.3,/,
     -         'PUMP ALIGNMENT EFFICIENCY=',D10.3,/,
     -         'LOWER AND UPPER MANIFOLDS=',2I3)
  105 FORMAT (/'NUMBER OF IONS BEING CONSIDERED=',I3)
  106 FORMAT ( 'ION NUMBER ',I3,' ( ',A2,
     -         ' )  HAS ',I3,' MANIFOLDS')
  107 FORMAT ('MANIFOLD NUMBER ',I3,' ( ',A7,
     -        ')  HAS AN INITIAL CONCENTRATION OF ',1PD10.3)
  108 FORMAT ('ION NUMBER ',I3,' HAS A TOTAL CONCENTRATION OF ',1PD10.3)
  109 FORMAT (/'NUMBER OF DECAY TIMES IS=',I3)
  110 FORMAT ('DECAY TIME ',I3,' GOES FROM MANIFOLD ',I3,
     -        ' TO ',I3,' WITH RATE ',1PD10.3)
  111 FORMAT (/'NUMBER OF BILINEAR PROCESSES=',I3)
  112 FORMAT ('PROCESS ',I3,' LOSS MANIFOLDS=',2I3,' GAIN MANIFOLDS=',
     -        2I3,' RATE=',1PD10.3,' ACCEPTOR =',I3)
!
      THRSMN=1.0E30
      DO 10 I=1,NLASLAM
         T1=2.0D0 - REFLOUT(I) - REFLBCK(I) - 2.0D0*SURFACET(I)
         T1=2.0D0 * RODL * CAVALFA(I) + T1
         GAMMA = 1 + (FRACLO(I)/FRACUP(I))
         T2=RESTYPE*STIM(I)*RODL*(GAMMA-1)
         T3=RESTYPE*STIM(I)*RODL*GAMMA
!          T2=2.0*STIM(I)*RODL*FRACLO(I)
!          T3=2.0*STIM(I)*RODL*(FRACLO(I)+FRACUP(I))
          THRESH(I)=TOTLCON(1)
!          IF (T3.GT. 0.0D0) THRESH(I)=(T1+T2*TOTLCON(1))/T3
          THRESH(I)=(T1+T2*TOTLCON(1))/T3
!          IF (THRESH(I) .LT. THRSMN) THEN 
             THRSMN=THRESH(I)
	         T1S=T1
	         T2S=T2
	         T3S=T3
!          END IF
   10  CONTINUE
      
       WRITE(4,200) TEMPER
       WRITE(4,201) NLASLAM
       WRITE(4,202) (I,MANUPLZ(I),MANLOLZ(I),EMISLAM(I),
     -              FRACUP(I),FRACLO(I),STIM(I),SPON(I),CAVALFA(I),
     -              REFLOUT(I),REFLBCK(I),SURFACET(I),RODDEX(I),
     -              OPTLNG(I),SPO(I),ROUNDTT(I),THRESH(I),
     -              I=1,NLASLAM)
  200 FORMAT (/'TEMPERATURE=',F6.1)  
  201 FORMAT (/'NUMBER OF LASER WAVELENGTHS=',I3)
  202 FORMAT ('FOR WAVELENGTH ',I3,/,
     -   '  UPPER LASER MANIFOLD=',I3,'    LOWER LASER MANIFOLD=',I3
     -,/,'  EMISSION WAVELENGTH =',1PD10.3,/,
     -   '  UPPER STARK FRACTION=',D10.3,'   LOWER = ',D10.3,/,
     -   '  STIMULATED EMISSION CROSS SECTION    =',D10.3,/,
     -   '  SPONTANEOUS EMISSION RATE            =',D10.3,/,
     -   '  BULK ABSORPTION COEFFICIENT (PER CM) =',D10.3,/,
     -   '  OUTPUT COUPLER REFLECTIVITY          =',D10.3,/,
     -   '  OTHER MIRROR NET REFLECTIVITY        =',D10.3,/,
     -   '  NET INTRA-CAVITY SURFACE TRANSMISSION=',D10.3,/,
     -   '  ROD INDEX OF REFRACTION              =',D10.3,/,
     -   '  CAVITY OPTICAL LENGTH  (CM)          =',D10.3,/,
     -   '  SPONTANEOUS EMISSION GEOMETRIC FACTOR=',D10.3,/,
     -   '  CAVITY ROUND TRIP TIME  (MICRO SEC)  =',D10.3,/,
     -   '  THRESHOLD DENSITY ASSUMING ION 1     =',D10.3)     
!
      RETURN
      END
!		
C*********************************************************************
!
      SUBROUTINE MOREDMP (NREACT,MANCNT,REACT,NEQ,Y,PLSMIN,PLSMAX,
     -                    MAN)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      CHARACTER*7 MAN(20)
      DIMENSION REACT(104),Y(25)
      DIMENSION RLOSS(60,20),RGAIN(60,20),XLOSS(5),EOUT(5)
!
      COMMON /CAVK/ CAVL,CMAREA,RODAREA,RODL,CMRAD,RODRAD,PABSL,
     -              TQ,TQI,RESTYPE,PUMPTYPE,IQSWITCH      
      COMMON /DECAY1/ DKRATE(50), NDKTIME, MANUP(50), MANLO(50)
      COMMON /DECAY2/ BILINRT(20), NBILIN, MANLOS1(20),
     -                MANLOS2(20), MANGAN1(20), MANGAN2(20), NACEPTR(20)
      COMMON /PUMPK/ PUMPSIG(4),PUMPE,PUMPLAM,W1,PUMPETA,PMPALGN,
     -               FWHM,NPMPLV,IPUMP,MANPMP(4,2)
      COMMON /WAVLNG/ EMISLAM(5),SPO(5),ROUNDTT(5),TEMPER,OPTLNG(5),
     -                FRACUP(5),FRACLO(5),STIM(5),SPON(5),CAVALFA(5),
     -                REFLOUT(5), REFLBCK(5), SURFACET(5), RODDEX(5),
     -                NLASLAM, MANUPLZ(5), MANLOLZ(5)
      COMMON /TIMEK/ DELTAT, TOUT, T, NPOINTS
      COMMON /PHYSK/ CC,HC,PI
!
!     THE SECOND OUTPUT SECTION REPORTS 'BOOKKEEPING' INFORMATION.
!     THAT IS, IT TELLS WHERE ALL THE EXCITATIONS HAVE GONE.
!
      DO 10 I=1,NREACT
         REACT(I)=REACT(I)*DELTAT
      DO 10 J=1,MANCNT
         RLOSS(I,J)=0.0D0
         RGAIN(I,J)=0.0D0
   10 CONTINUE
      DO 15 I=1,3
         IF (EOUT(I).LT.1D-5) EOUT(I)=0.0D0
   15 CONTINUE
!
!     SINGLE ION DECAY PROCESSES
      RODVOL = RODAREA * RODL * PMPALGN
      WRITE (4,100) NREACT
      WRITE (4,101)
      DO 20 I=1,NDKTIME
         RNUMBER=REACT(I) * RODVOL
         RLOSS(I,MANUP(I)) = RLOSS(I,MANUP(I)) + RNUMBER
         RGAIN(I,MANLO(I)) = RGAIN(I,MANLO(I)) + RNUMBER
         WRITE (4,102) I,REACT(I),RNUMBER
   20 CONTINUE
!
!     BILINEAR EXCHANGE PROCESSES
      NLO=NDKTIME+1
      NHI=NDKTIME+NBILIN
      WRITE (4,103)
      DO 30 I=NLO,NHI
         K1=I-NLO+1
         RNUMBER=REACT(I) * RODVOL
         RLOSS(I,MANLOS1(K1)) = RLOSS(I,MANLOS1(K1)) + RNUMBER
         RGAIN(I,MANGAN1(K1)) = RGAIN(I,MANGAN1(K1)) + RNUMBER
         RLOSS(I,MANLOS2(K1)) = RLOSS(I,MANLOS2(K1)) + RNUMBER
         RGAIN(I,MANGAN2(K1)) = RGAIN(I,MANGAN2(K1)) + RNUMBER
         WRITE (4,104) K1,REACT(I),RNUMBER
   30 CONTINUE
!
!     PUMPING PROCESS
      EABS=0.0D0
      DO 40 I=1,NPMPLV
         NLO=NDKTIME+NBILIN+I
         WRITE (4,105)
         RNUMBER =REACT(NLO) * RODVOL/PMPALGN
         RLOSS(NLO,MANPMP(I,1))=RLOSS(NLO,MANPMP(I,1))+RNUMBER
         RGAIN(NLO,MANPMP(I,2))=RGAIN(NLO,MANPMP(I,2))+RNUMBER
         ABSENRGY=RNUMBER * HC/PUMPLAM
         WRITE (4,106) REACT(NLO),RNUMBER,ABSENRGY
         EABS=ABSENRGY+EABS
   40 CONTINUE
!
!     LASING RELATED PROCESSES
      NLO=NDKTIME+NBILIN+NPMPLV
      WRITE (4,107)
      DO 50 I=1,NLASLAM
         WRITE (4,108) EMISLAM(I)
         OPTVOL = CMAREA * OPTLNG(I) * PMPALGN
!
!        ION LOSS FROM STIMULATED EMISSION      
         NLO=NLO+1
         RNUMBER = REACT(NLO) * RODVOL
         ENERGY=RNUMBER * HC/EMISLAM(I)
         WRITE (4,109) REACT(NLO),RNUMBER,ENERGY
!      
!        PHOTON GAIN FROM STIMULATED EMISSION     
         NLO=NLO+1
         RNUMBER = REACT(NLO) * OPTVOL
         ENERGY=RNUMBER * HC/EMISLAM(I)
         WRITE (4,110) REACT(NLO),RNUMBER,ENERGY
!
!        LOSS FROM BULK CAVITY ABSORPTION     
         NLO=NLO+1
         RNUMBER = REACT(NLO) * OPTVOL
         ENERGY=RNUMBER * HC/EMISLAM(I)
         WRITE (4,111) REACT(NLO),RNUMBER,ENERGY

!        GAIN FROM SPONTANEOUS EMISSION     
         NLO=NLO+1
         RNUMBER = REACT(NLO) * OPTVOL
         ENERGY=RNUMBER * HC/EMISLAM(I)
         WRITE (4,112) REACT(NLO),RNUMBER,ENERGY
!      
!        LOSS FROM SURFACE TRAMSMISSIONS      
         NLO=NLO+1
         RNUMBER = REACT(NLO) * OPTVOL
         ENERGY=RNUMBER * HC/EMISLAM(I)
         WRITE (4,113) REACT(NLO),RNUMBER,ENERGY
!
!        LOSS FROM OTHER MIRRORS
         NLO=NLO+1
         RNUMBER = REACT(NLO) * OPTVOL
         ENERGY=RNUMBER * HC/EMISLAM(I)
         WRITE (4,114) REACT(NLO),RNUMBER,ENERGY
!
!        LOSS FROM OUT COUPLING
         NLO=NLO+1
         RNUMBER = REACT(NLO) * OPTVOL
         EOUT(I)=RNUMBER * HC/EMISLAM(I)
         WRITE (4,115) REACT(NLO),RNUMBER,EOUT(I)
! 
!        LOSS FROM Q-SWITCH
         NLO=NLO+1
         RNUMBER = REACT(NLO) * OPTVOL
         ENERGY  = RNUMBER * HC/EMISLAM(I)
         WRITE (4,116) REACT(NLO),RNUMBER,ENERGY
!
   50 CONTINUE
!
      NLO=1
      NHI=NDKTIME
      WRITE (4,117) NLO,NHI
      NLO=NHI+1
      NHI=NHI+NBILIN
      WRITE (4,118) NLO,NHI
      NLO=NHI+1
      NHI=NHI+NPMPLV
      WRITE (4,119) NLO,NHI
! 
      WRITE (4,120)
      WRITE (4,121)
      DO 60 I=1,NHI
      DO 60 J=1,MANCNT
         RDENSITY = RGAIN(I,J) / RODVOL
   60 CONTINUE
!
      WRITE (4,122)
      WRITE (4,121)
      DO 70 I=1,NHI
      DO 70 J=1,MANCNT
         RDENSITY = RLOSS(I,J) / RODVOL
   70 CONTINUE
!
      WRITE(4,200)
      DO 80 I=1,NEQ
         WRITE (4,201) I,MAN(I),Y(I)
   80 CONTINUE
!
      WRITE(4,300) PLSMIN
      WRITE(4,301) PLSMAX
      PWIDTH=PLSMAX-PLSMIN
      WRITE(4,302) PWIDTH
!
      DO 90 I=1,NLASLAM
         REFLOUT(I)=REFLOUT(I)*ROUNDTT(I)
         REFLBCK(I)=REFLBCK(I)*ROUNDTT(I)
         CAVALFA(I)=CAVALFA(I)*ROUNDTT(I)
         SURFACET(I)=SURFACET(I)*ROUNDTT(I)
         XLOSS(I)=REFLBCK(I)+CAVALFA(I)+SURFACET(I)
   90 CONTINUE
!   
      WRITE(*,400) ' ',TEMPER,PUMPE,EABS,
     -REFLOUT(1),XLOSS(1),PLSMIN,PWIDTH,(EOUT(I),I=1,3)
!   
      WRITE(11,401) TEMPER,PUMPE,EABS,
     -REFLOUT(1),XLOSS(1),PLSMIN,PWIDTH,(EOUT(I),I=1,3)
!
  100 FORMAT (//////
     -     'THESE ARE THE CONTRIBUTIONS FROM EACH RATE TERM'
     -     ,/,'   THERE ARE ',I5,' INDIVIDUAL TERMS',/)	 
  101 FORMAT ('FOR THE SINGLE ION DECAY PROCESSES')
  102 FORMAT ('  PROCESS ',I3,' CONTRIBUTES ',1PD11.3,
     -       ' PER CM**3  =',D11.3,' TOTAL IONS')
  103 FORMAT (//'FOR THE BILINEAR EXCHANGE PROCESSES')
  104 FORMAT ('  PROCESS ',I3,' CONTRIBUTES ',1PD11.3,
     -        ' PER CM**3  =',D11.3,' TOTAL IONS')
  105 FORMAT (//'FOR THE PUMPING PROCESS')
  106 FORMAT ('  DENSITY ABSORBED=',1PD11.3,/,
     -        '  PHOTONS ABSORBED=',D11.3,/,
     -        '  ENERGY ABSORBED =',D11.3)
  107 FORMAT (//'FOR THE LASING PROCESSES',20X,'  DENSITY ',2X,
     -          '   NUMBER  ',2X,'   ENERGY')
  108 FORMAT ('  WAVELENGTH =',F9.5)    
  109 FORMAT ('  LOWER LEVEL GAIN DUE TO STIM. EMIS.    ',1PD13.3,
     -        2D13.3)
  110 FORMAT ('  PHOTON INCREASE  DUE TO STIM. EMIS.    ',1PD13.3,
     -        2D13.3)
  111 FORMAT ('  BULK CAVITY ABSORPTION LOSSES EXTRACT  ',1PD13.3,
     -        2D13.3)
  112 FORMAT ('  PHOTON INCREASE  DUE TO SPON. EMIS.    ',1PD13.3,
     -        2D13.3)  
  113 FORMAT ('  SURFACE TRANSMISSION LOSSES EXTRACT    ',1PD13.3,
     -        2D13.3)
  114 FORMAT ('  OTHER MIRROR REFLECTION LOSSES EXTRACT ',1PD13.3,
     -        2D13.3)
  115 FORMAT ('  OUTPUT COUPLING  LOSSES EXTRACT        ',1PD13.3,
     -        2D13.3)
  116 FORMAT ('  Q-SWITCH LOSSES EXTRACT                ',1PD13.3,
     -        2D13.3)
  117 FORMAT (///'PROCESSES ',I3,' - ',I3,' ARE SINGLE ION DECAY')
  118 FORMAT ('PROCESSES ',I3,' - ',I3,' ARE BILINEAR EXCHANGE')
  119 FORMAT ('PROCESSES ',I3,' - ',I3,' ARE PUMPING')
  120 FORMAT (/'THE BUDGET FOR INCREASING ION CONCENTRATIONS')
  121 FORMAT ('PROCESS',2X,'MANIFOLD',8X,'ID',3X,' DENSITY '
     -         ,4X,' NUMBER')
  122 FORMAT (I4,5X,I4,6X,A7,1PD13.3,D13.3)
  123 FORMAT (/'THE BUDGET FOR DECREASING ION CONCENTRATIONS')  
  200 FORMAT ('FINAL VALUES FOR THE POPULATION DENSITIES ARE')
  201 FORMAT (I5,3X,A7,1PD14.3)
  300 FORMAT ('PULSE STARTS AT TIME',1PD13.3)
  301 FORMAT (' AND  STOPS AT TIME ',1PD13.3)
  302 FORMAT (' I.E. PULSE WIDTH = ',1PD13.3)
  400 FORMAT (A1,F5.1,F9.5,F10.6,F7.3,F7.3,F8.2,F8.2,1PD10.3,3D11.3)
  401 FORMAT (F5.1,F9.5,F10.6,F7.3,F7.3,F8.2,F8.2,1PD10.3,3D11.3)
!
      RETURN
      END 
!
!*********************************************************************
!      
      FUNCTION PUMP(I,T,FWHM,PI)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      INTEGER*4 I,ID
!
!  CALCULATE THE NORMALIZED PUMP SHAPE FUNCTION.  THE FUNCTION IS
!  NORMALIZED SUCH THAT THE INTEGRAL OVER ALL TIME IS EQUAL TO ONE. 
!
!    IF  I=0  THEN CW PUMP
!          1  THEN RECTANGULAR
!          2  THEN  SIN(T)*SIN(T)
!          3  THEN  T * EXP(-T*T)
!          4  THEN  T * EXP(-T)
!          5  THEN  1-T
!          6  THEN   T
!          7  THEN  SQUARE PULSE TRAIN WITH DUTY CYCLE 0.1 LENGTH FWHM
!          8  THEN    "      "    "          "     "   0.5   "     "
!
      GO TO (10,11,12,13,14,15,16,17,18), I+1
   10 CONTINUE
      PUMP=1.0D0/FWHM
      RETURN
!
   11 CONTINUE
      PUMP=0.0D0
      IF (T .GT. FWHM) RETURN
      PUMP=1.D0/FWHM
      RETURN
!
   12 CONTINUE
      PUMP=0.0D0
      WIDTH=2.0D0*FWHM
      IF (T .GT. WIDTH) RETURN
      AARG=PI*T/WIDTH
      PUMP=((DSIN(AARG))**2)/FWHM
      RETURN
!
   13 CONTINUE
      PUMP=0.0D0
      IF (FWHM .LE. 0.0D0) RETURN
      ALPHA=1.1331512D0/FWHM
      EARG=-(ALPHA*ALPHA*T*T)
      PUMP=2.0D0*ALPHA*ALPHA*T*DEXP(EARG)
      RETURN
!
   14 CONTINUE
      PUMP=0.0D0
      IF (FWHM .LE. 0.0D0) RETURN
      ALPHA=2.446386D0/FWHM
      EARG=-(ALPHA*T)
      PUMP=ALPHA*ALPHA*T*DEXP(EARG)
      RETURN
!
   15 CONTINUE
      PUMP=0.0D0
      WIDTH=2.0D0*FWHM
      IF (T .GT. WIDTH) RETURN
      PUMP=1.0D0/FWHM - T/(2.0D0*FWHM**2)
      RETURN
!   
   16 CONTINUE
      PUMP=0.0D0
      WIDTH=2.0D0*FWHM
      IF (T .GT. WIDTH) RETURN
      PUMP=T/(2.0D0*FWHM**2)
      RETURN
!
   17 CONTINUE
      PUMP=0.0D0
      IF (T .GT. FWHM) RETURN
      DUTY=0.1D0
      ID=DINT(T*16.0D0/FWHM)
      IF ( (T.GE.FWHM*ID/16.0D0) .AND. (T.LT.(ID+DUTY)*FWHM/16.0D0) )
     -             PUMP=1.0D0/(DUTY*FWHM)
      RETURN
!
   18 CONTINUE
      PUMP=0.0D0
      IF (T .GT. FWHM) RETURN
      DUTY=0.5D0
      ID=DINT(T*16.0D0/FWHM)
      IF ( (T.GE.FWHM*ID/16.0D0) .AND. (T.LT.(ID+DUTY)*FWHM/16.0D0) )
     -             PUMP=1.0D0/(DUTY*FWHM)
      RETURN
!
      END
!
!*********************************************************************
!
      FUNCTION DELTAN (R1,DT,Y)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      YTEMP=Y-R1*DT
      DELTAN=R1
      IF (YTEMP .LT. 0.0D0) DELTAN=Y/DT
      RETURN
      END
!
*********************************************************************
! Subroutines added by PL Cross in April 2003
!
!
!
      Subroutine OFName(lshort,lout,icase)
      Implicit None
!
! Dummy Arguments
!
      character lout*128  ! Output File Name
      character lshort*128
      integer  icase
!
! Local Variables
!
      character lint2*3 ! 3 digit integer in character variable
      integer ial            ! actual length of a string
      integer i1, i2         ! beginning and ending locations
!
!
!
      call my_FillString(lout,' ')
      ial = 7
      lout(1:ial) = lshort(1:ial)

      lint2 = '   '   
      write(lint2,'(i3)') icase
      if (lint2(1:1).eq.' ') lint2(1:1) = '0'
      if (lint2(2:2).eq.' ') lint2(2:2) = '0'
      i1 = ial + 1
      i2 = i1  + 2    
      lout(i1:i2) = lint2(1:3)

      i1 = i2 + 1
      i2 = i1 + 3
      lout(i1:i2) = '.rel'

!      write(*, 120) lout(1:i2)
120   format(1x,' Output File Name = ',a)
      Return
      End 
! 
! **************************************************************************
!
      Subroutine my_FillString(string1, string2)
!
! Fill String1 with String2 
! (mostly good for filling initializing a string with blanks)
!
      Implicit none
      character string1*128  ! string to be filled
      character string2*1    ! string to fill string1 with
      integer ilen1, ilen2   ! lengths of strings 1 and 2
      integer nloop   ! number of complete copies of string2 to put into string 1
      integer iloop   ! loop counter
      integer is_low, is_up  ! lower and upper string1 positions in which to write characters from string 2 
      integer is2     ! string2 position counter
        ilen1 = len(string1)
        ilen2 = len(string2) 
        nloop = ilen1 / ilen2
        if (nloop.ge.0) then   ! if at least one full copy of string2 is to be copied 
          do iloop = 1, nloop
            is_low = (iloop-1) * ilen2 + 1
            is_up = is_low + ilen2 - 1
            string1(is_low:is_up) = string2(1:ilen2)
          end do
        end if
        is2 = 0
        do while (is_up.le.ilen1)  ! if string1 isn't filled up, fill it up
           is2 = is2 + 1
           string1(is_up:is_up) = string2(is2:is2)
           is_up = is_up + 1
        end do
      return 
      end 

